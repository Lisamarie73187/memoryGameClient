[{"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/index.js":"1","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/App.js":"2","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/reportWebVitals.js":"3","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/SignIn.js":"4","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/Game.jsx":"5","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/Card.js":"6","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/Lobby.js":"7","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/WhoseTurnModal.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1730,"mtime":1611610435399,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":714,"mtime":1611605777980,"results":"13","hashOfConfig":"10"},{"size":2962,"mtime":1611620485597,"results":"14","hashOfConfig":"10"},{"size":2590,"mtime":1611614004715,"results":"15","hashOfConfig":"10"},{"size":1305,"mtime":1611547051280,"results":"16","hashOfConfig":"10"},{"size":697,"mtime":1611620440450,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1o1wil4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/index.js",[],["36","37"],"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/App.js",[],"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/reportWebVitals.js",[],"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/SignIn.js",[],"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/Game.jsx",["38","39"],"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/Card.js",["40","41"],"import React,{useState, useEffect} from 'react'\nimport { useSpring, animated as a } from 'react-spring'\n\n\nfunction Card({id, picture, game, flippedCount, setFlippedCount, flippedIndexes, setFlippedIndexes, socket}) {\n    const [flipped, setFlippedCard] = useState(false);\n    const {transform, opacity} = useSpring({\n        opacity: flipped ? 1 : 0,\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: {mass: 5, tension: 500, friction: 80},\n    });\n\n    useEffect(() => {\n        if (flippedIndexes[2] === true && flippedIndexes.indexOf(id) > -1) {\n            setTimeout(() => {\n                setFlippedCard(state => !state);\n                setFlippedCount(flippedCount + 1);\n                setFlippedIndexes([])\n            }, 1000)\n        } else if (flippedIndexes[2] === false && id === 0) {\n            setFlippedCount(flippedCount + 1);\n            setFlippedIndexes([])\n        }\n    }, [flippedIndexes]);\n\n\n\n\n    useEffect(() => {\n\n        socket.current.on('cardFlipped', (data) => {\n            if(data.id === id){\n                if (!game[id].flipped && flippedCount % 3 === 0) {\n                    setFlippedCard(!flipped);\n                    setFlippedCount(flippedCount + 1);\n                    const newIndexes = [...data.flippedIndexes];\n                    newIndexes.push(id);\n                    setFlippedIndexes(newIndexes)\n\n                } else if (\n                    flippedCount % 3 === 1 &&\n                    !game[id].flipped &&\n                    flippedIndexes.indexOf(id) < 0\n                ) {\n                    setFlippedCard(state => !state);\n                    setFlippedCount(flippedCount + 1);\n                    const newIndexes = [...data.flippedIndexes];\n                    newIndexes.push(id);\n                    setFlippedIndexes(newIndexes)\n                }\n            }\n\n        })\n\n    }, []);\n\n    const onCardClick = () => {\n        socket.current.emit('cardFlipped', {id, flippedIndexes});\n    };\n\n    return (\n        <div onClick={onCardClick}>\n            <a.div\n                className=\"c back\"\n                style={{\n                    opacity: opacity.interpolate(o => 1 - o),\n                    transform,\n                }}\n            />\n            <a.div\n                className=\"c front\"\n                style={{\n                    opacity,\n                    transform: transform.interpolate(t => `${t} rotateX(180deg)`),\n                    backgroundImage: `url(${picture})`,\n                }}\n            />\n        </div>\n    )\n}\n\nexport default Card;\n","/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/Lobby.js",[],"/Users/lisaherzberg/Code/projects/1.2021/memoryGame/client/memory-game/src/components/WhoseTurnModal.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":20,"column":8,"nodeType":"48","endLine":20,"endColumn":10,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":50,"column":7,"nodeType":"48","endLine":50,"endColumn":21,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"52","line":24,"column":8,"nodeType":"48","endLine":24,"endColumn":24,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"54","line":59,"column":8,"nodeType":"48","endLine":59,"endColumn":10,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'options' and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has missing dependencies: 'socket' and 'userList.length'. Either include them or remove the dependency array.",["59"],"React Hook useEffect has missing dependencies: 'flippedCount', 'id', 'setFlippedCount', and 'setFlippedIndexes'. Either include them or remove the dependency array. If 'setFlippedCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["60"],"React Hook useEffect has missing dependencies: 'flipped', 'flippedCount', 'flippedIndexes', 'game', 'id', 'setFlippedCount', 'setFlippedIndexes', and 'socket'. Either include them or remove the dependency array. If 'setFlippedCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [options, socket]",{"range":"70","text":"71"},"Update the dependencies array to be: [flippedCount, socket, userList.length]",{"range":"72","text":"73"},"Update the dependencies array to be: [flippedCount, flippedIndexes, id, setFlippedCount, setFlippedIndexes]",{"range":"74","text":"75"},"Update the dependencies array to be: [flipped, flippedCount, flippedIndexes, game, id, setFlippedCount, setFlippedIndexes, socket]",{"range":"76","text":"77"},[582,584],"[options, socket]",[1527,1541],"[flippedCount, socket, userList.length]",[938,954],"[flippedCount, flippedIndexes, id, setFlippedCount, setFlippedIndexes]",[2079,2081],"[flipped, flippedCount, flippedIndexes, game, id, setFlippedCount, setFlippedIndexes, socket]"]